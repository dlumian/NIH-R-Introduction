a = 3
a
a + a
?c
?rownames
2 + 1
2 - 1
2 * 1
2 / 1
2 ** 2
1 + 1
2 - 1
2 / 2
3 * 3
4 ** 4
a = 1
b = 2
c = 3
d = 4
a + a
b - a
b / b
c * c
d ** d
a = a + 1
print(a)
vector_1 = c(1, 2, 3, 4)
print(vector_1)
sum(vector_1)
mean(vector_1)
min(vector_1)
max(vector_1)
vector_2 = c(a, b, c, d)
print(vector_2)
?setequal
setequal(vector_1, vector_2)
vector_2[1]=1
print(vector_2)
setequal(vector_1, vector_2)
vector_3 = vector_1 + vector_2
print(vector_3)
vector_1 - vector_2
vector_1 * vector_2
vector_1 / vector_2
vector_1 ** vector_2
vector_4 = c(vector_1, vector_2, vector_3)
print(vector_4)
df1 = rbind(vector_1, vector_2, vector_3)
print(df1)
df2 = cbind(vector_1, vector_2, vector_3)
print(df2)
colnames(df2)
rownames(df2)
colnames(df2)
rownames(df2, do.NULL=FALSE)
colnames(df2) = c("Col1", "Col2", "Col3")
rownames(df2) = c("Row1", "Row2", "Row3", "Row4")
colnames(df2)
rownames(df2)
2 + 1
2 - 1
2 * 1
2 / 1
2 ** 2
1 + 1
2 - 1
2 / 2
3 * 3
4 ** 4
a = 1
b = 2
c = 3
d = 4
a + a
b - a
b / b
c * c
d ** d
a = a + 1
print(a)
vector_1 = c(1, 2, 3, 4)
print(vector_1)
sum(vector_1)
mean(vector_1)
min(vector_1)
max(vector_1)
vector_2 = c(a, b, c, d)
print(vector_2)
?setequal
setequal(vector_1, vector_2)
vector_2[1]=1
print(vector_2)
setequal(vector_1, vector_2)
vector_3 = vector_1 + vector_2
print(vector_3)
vector_1 - vector_2
vector_1 * vector_2
vector_1 / vector_2
vector_1 ** vector_2
vector_4 = c(vector_1, vector_2, vector_3)
print(vector_4)
df1 = rbind(vector_1, vector_2, vector_3)
print(df1)
df2 = cbind(vector_1, vector_2, vector_3)
print(df2)
colnames(df2)
rownames(df2)
colnames(df2)
rownames(df2, do.NULL=FALSE)
colnames(df2) = c("Col1", "Col2", "Col3")
rownames(df2) = c("Row1", "Row2", "Row3", "Row4")
print(df2)
colnames(df2)
rownames(df2)
print('Hello, World!')
data()
iris
summary(iris)
iris[1,]
iris$Petal.Length
iris[,3]
iris[130:150, 1:3]
iris[iris$Species=="setosa", ]
iris[iris$Species=="setosa", c("Sepal.Length", "Sepal.Width")]
colnames(iris)
column_of_interest = "Sepal.Length"
col_mean = mean(iris[,column_of_interest])
cat("The mean of the columm", column_of_interest, "is: ", col_mean)
hist(iris$Sepal.Length)
boxplot(Sepal.Length ~ Species, iris, xlab = "Species", ylab = "Sepal Length")
with(iris, plot(Sepal.Length, Sepal.Width))
with(iris, plot(Sepal.Length, Sepal.Width, main = "Sepal Length and Width by Species", type = "n"))
with(subset(iris, Species == "setosa"), points(Sepal.Length, Sepal.Width, col = "blue"))
with(subset(iris, Species == "virginica"), points(Sepal.Length, Sepal.Width, col = "red"))
with(subset(iris, Species == "versicolor"), points(Sepal.Length, Sepal.Width, col = "green"))
legend("topright", pch = 1, col = c("blue", "red", "green"), legend = c("Setosa", "Virginica", "Versicolor"))
iris_sep_len <- iris %>% group_by(species) %>% summarize(new_col = mean(Sepal.Length))
library(tidyverse)
iris_sep_len <- iris %>% group_by(species) %>% summarize(new_col = mean(Sepal.Length))
iris
iris_sep_len <- iris %>% group_by(Species) %>% summarize(new_col = mean(Sepal.Length))
View(iris_sep_len)
library(tidyverse)
iris
iris_arrange <- arrange(iris, Sepal.Length)
iris_arrange
iris_arrange <- arrange(iris, desc(Sepal.Length))
iris_arrange
iris_select <- select(iris, Sepal.Length, Sepal.Width, Species)
iris_select
iris_select <- select(iris, -Sepal.Length, -Sepal.Width)
iris_select
iris_filter <- filter(iris, Species=="setosa")
iris_filter
iris_filter <- filter(iris, Sepal.Length > mean(iris$Sepal.Length))
iris_filter
iris_mutate <- mutate(iris, Sepal.Ratio=Sepal.Width/Sepal.Length)
iris_mutate
avg_sepal_length <-summarize(iris, mean_val = mean(Sepal.Length))
avg_sepal_length
group_by_species <- group_by(iris,Species)
group_by_species
groups(group_by_species)
groups(iris)
iris_final <- iris %>% group_by(Species) %>% summarize(new_col = mean(Sepal.Length))
iris_final
library(tidyverse)
getwd()
img_path = "../images"
dir.create(img_path)
pie(c("Sky" = 78, "Sunny side of pyramid" = 17, "Shady side of pyramid" = 5),
init.angle = 315, col = c("deepskyblue", "yellow", "yellow3"), border = FALSE)
species_count = as.data.frame(table(iris$Species))
species_count
pie(species_count$Freq, labels = species_count$Var1)
png('../images/iris_pie_chart.png')
pie(species_count$Freq, labels = species_count$Var1)
dev.off()
Sepal.Length_count = iris %>% group_by(Species) %>% summarize(Sepal.Length_cnt = length(Sepal.Length))
Sepal.Length_count
ggplot(iris, aes(x=Species)) + geom_bar()
ggplot(iris, aes(x=Sepal.Length)) + geom_histogram()
ggplot(iris, aes(x=Sepal.Length)) + geom_histogram(binwidth=.3)
ggplot(iris, aes(Sepal.Length)) + geom_density()
ggplot(iris, aes(x= Species, y=Sepal.Length)) + geom_boxplot()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) + geom_point()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) + geom_point() + geom_smooth(method=lm)
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) + geom_point() + geom_smooth(method=lm)
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + geom_point() + geom_smooth(method = lm) + facet_wrap(vars(Species), nrow=1)
iris_long <- iris %>% gather(key, value, -Species)
iris_long
ggplot(iris_long , aes(value)) + geom_density() + facet_wrap(vars(key), scales = "free")
ggsave(file.path(img_path, "facet_density.png"))
phylum = read_csv("../data/table_phylum_young.csv")
phylum
phylum_long <- phylum %>% gather(key, value, -taxa)
phylum_long
ggplot(phylum_long, aes(taxa, value)) +
geom_bar(aes(fill = key), position = "dodge", stat="identity")
ggplot(phylum_long, aes(taxa, value)) +
geom_bar(aes(fill = key), position = "dodge", stat="identity") +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
ggplot(phylum_long ,  aes(taxa, value)) +
geom_bar(aes(fill = key), position = "dodge", stat="identity") +
facet_wrap(vars(taxa), scales = "free")
ggsave(file.path(img_path, "facet_barplot.png"))
library(pheatmap)
vst <-read_tsv("ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE39nnn/GSE39866/suppl/GSE39866_Mouse.VarianceStabilized.Datagene.txt.gz")
vst
gene_select <- vst %>% filter(gene_id %in% c("Mobp","Ttr","Caly", "Vax1")) %>% data.frame
rownames(gene_select) <- gene_select$gene_id
gene_select
gene_select %>% select(-gene_id) %>% pheatmap()
library(tidyverse)
library(corrplot)
mtcars
?mtcars
summary(mtcars)
car_corr = cor(mtcars)
car_corr
corrplot(car_corr, method="number", type="lower")
cor.test(mtcars$mpg, mtcars$hp)
ggplot(mtcars, aes(x=mpg, y=hp)) + geom_point() + geom_smooth(method=lm)
hist(mtcars$wt)
t.test(mtcars$wt, mu=3)
unique(mtcars$vs)
table(mtcars$vs)
t.test(mtcars$mpg~mtcars$vs)
v_mpg = mtcars[mtcars$vs==0, "mpg"]
v_mpg
s_mpg = mtcars[mtcars$vs==1, "mpg"]
s_mpg
t.test(v_mpg, s_mpg)
ggplot(mtcars, aes(x=vs, y=mpg)) +
geom_bar(stat = "summary", fun="mean")
mpg_barplot_data <- mtcars %>% group_by(vs) %>% summarize(mpg_M = mean(mpg), mpg_SD = sd(mpg))
mpg_barplot_data
ggplot(mpg_barplot_data, aes(x=vs, y=mpg_M, fill=vs)) +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(data = mpg_barplot_data,
aes(ymin = mpg_M - mpg_SD, ymax = mpg_M + mpg_SD, y = mpg_M),
position = position_dodge(width = .9))
head(ChickWeight)
?ChickWeight
summary(ChickWeight)
ChickWeightWide = reshape(ChickWeight, idvar = c("Chick", "Diet"), timevar = "Time", direction="wide")
ChickWeightWide
any(is.na(ChickWeightWide))
sum(is.na(ChickWeightWide))
ChickWeightWide = ChickWeightWide[complete.cases(ChickWeightWide), ]
ChickWeightWide
t.test(ChickWeightWide$weight.0, ChickWeightWide$weight.2, paired = TRUE)
ggplot(ChickWeight, aes(x=Time, y=weight, fill=Time)) +
geom_bar(stat = "summary", fun="mean")
